---
/* import ModalMail from "../Preact/ModalMail";
 */
const navLinks = [
  { href: "/", label: "Inicio", target: "self" },
  { href: "/medios", label: "En los Medios", target: "self" },
  { href: "/servicios", label: "Servicios", target: "self" },
  { href: "/cotiza", label: "Cotiza tu seguro", target: "self" },
];
const convertionLinks = [
  {
    href: "https://academia.lachicadelseguro.com.ar/",
    label: "Academia de Seguros",
    target: "blank",
  },
  { href: "/blog", label: "Blog", target: "self" },
  { href: "/podcast", label: "Podcasts", target: "self" },
  { href: "/descargas", label: "Material Descargable", target: "self" },
];
---

<nav
  id="navbar"
  class="w-full grid place-items-center fixed z-10 transition-all duration-500 mix-blend-difference"
>
  <div
    class="flex items-center justify-between lg:justify-center w-full mx-auto lg:px-3 2xl:px-0 py-3"
  >
    <div class="flex justify-left items-center flex-1">
      <a
        href="/"
        class="flex items-center z-10"
      >
        <img
          class="w-[50px]"
          src="/favicon.svg "
          alt="Logo Islay Asesores de Seguros"
        />
      </a>
    </div>

    <!-- links de navegacion -->

    <!--       <div
        id="navLinksResponsive"
        class="hidden lg:static lg:flex lg:justify-start lg:items-center lg:h-auto"
      >
        navegador web
        <ul
          id="navbar-web"
          class="text-center justify-start items-center space-y-4 lg:flex lg:space-y-0 lg:rounded-full gap-6 transition-all duration-500 flex-1"
        >
          {
            navLinks.map((item) => {
              return (
                <>
                  <li class="hidden lg:block group   font-medium ">
                    <a
                      id="navItem"
                      class="block py-2 px-3  md:bg-transparent md:p-0 hover:text-[#c2cda5]  text-base xl:text-lg"
                      href={item.href}
                    >
                      {item.label}
                    </a>

                    <div class="hidden md:block md:opacity-0 md:w-0 md:border-t-[3px] md:border-[#c2cda5] md:group-hover:w-full md:group-hover:opacity-100 md:duration-200 md:ease-linear">
                      {" "}
                    </div>
                  </li>
                </>
              );
            })
          }
        </ul>
      </div> -->

    <!-- //navegador tablet y movil -->
    <!-- <div
      id="navbar-movil"
      class="fixed w-full inset-0 flex justify-start items-start bg-zinc-900 bg-opacity-0 -translate-y-full transition-all duration-200 -z-10"
    >
      <div
        class="flex justify-center items-center w-full bg-zinc-900 h-[60%] opacity-0 transition-opacity duration-500"
      >
        <div class="flex justify-start items-start w-[80%] gap-20">
          <div class="w-[30%]">
            <p class="text-lg font-medium pl-1 pb-[6px] text-zinc-200">
              Navega
            </p>
            <div class="border-b border-zinc-200 h-auto mb-3"></div>
            <ul class="flex flex-col gap-[6px]">
              {
                navLinks.map((item) => {
                  return (
                    <>
                      <li class="group text-[28px] leading-8  w-fit  ">
                        <a
                          id="navItem"
                          class="text-zinc-500 hover:text-zinc-100  duration-300 ease-linear"
                          href={item.href}
                        >
                          {item.label}
                        </a>
                      </li>
                    </>
                  );
                })
              }
            </ul>
          </div>

          <div class="w-[30%]">
            <p class="text-lg font-medium pl-1 pb-[6px] text-zinc-200">
              Aprende
            </p>
            <div class="border-b border-zinc-200 h-auto mb-3"></div>
            <ul class="flex flex-col gap-[6px]">
              {
                convertionLinks.map((item) => {
                  return (
                    <>
                      <li class="group text-[28px] leading-8  w-fit  ">
                        <a
                          id="navItem"
                          class="text-zinc-500 hover:text-zinc-100 duration-300 ease-linear"
                          href={item.href}
                        >
                          {item.label}
                        </a>
                      </li>
                    </>
                  );
                })
              }
            </ul>
          </div>
        </div>
      </div>
    </div> -->

    <!-- boton nav web -->

    <div
      class="text-center lg:flex justify-end items-center lg:static z-10 flex-1"
    >
      <div class="flex justify-end items-center flex-1 mr-8">
        <label class="menu__toggle">
          <input
            type="checkbox"
            class="menu__input hidden"
            id="menu-input"
          />
        </label>
      </div>
    </div>
  </div>
</nav>

<div
  id="navbar-movil"
  class="w-full fixed top-0 h-screen flex justify-start items-start bg-zinc-900 bg-opacity-0 -translate-y-full transition-all duration-200 backdrop-blur-[1px]"
>
  <div
    class="flex justify-center items-center w-full bg-zinc-900 h-[60%] opacity-0 transition-opacity duration-500"
  >
    <div class="flex justify-start items-start w-[80%] gap-20">
      <div class="w-[30%]">
        <p class="text-lg font-medium pl-1 pb-[6px] text-zinc-200">Navega</p>
        <div class="border-b border-zinc-200 h-auto mb-3"></div>
        <ul class="flex flex-col gap-[6px]">
          {
            navLinks.map((item) => {
              return (
                <>
                  <li class="group text-[28px] leading-8  w-fit  ">
                    <a
                      id="navItem"
                      class="text-zinc-500 hover:text-zinc-100  duration-300 ease-linear"
                      href={item.href}
                      target={item.target}
                    >
                      {item.label}
                    </a>
                  </li>
                </>
              );
            })
          }
        </ul>
      </div>

      <div class="w-[30%]">
        <p class="text-lg font-medium pl-1 pb-[6px] text-zinc-200">Aprende</p>
        <div class="border-b border-zinc-200 h-auto mb-3"></div>
        <ul class="flex flex-col gap-[6px]">
          {
            convertionLinks.map((item) => {
              return (
                <>
                  <li class="group text-[28px] leading-8  w-fit  ">
                    <a
                      id="navItem"
                      class="text-zinc-500 hover:text-zinc-100 duration-300 ease-linear"
                      href={item.href}
                      target={item.target}
                    >
                      {item.label}
                    </a>
                  </li>
                </>
              );
            })
          }
        </ul>
      </div>
    </div>
  </div>
</div>
<div>
  <!-- <ModalMail client:only="preact" /> -->
</div>

<style>
  .menu__toggle {
    --icon-toggle-menu: url("../../../public/svg/menu_open.svg");
    background-image: var(--icon-toggle-menu);
    filter: invert(1);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.3s;
    height: 30px;
    width: 30px;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    cursor: pointer;
  }

  .menu__toggle:has(.menu__input:checked) {
    --icon-toggle-menu: url("../../../public/svg/menu_close.svg");
  }
</style>

<script>
  const menuInput = document.getElementById("menu-input") as HTMLInputElement;
  /*  const navbarWeb = document.getElementById("navbar-web"); */
  const navbarMovil = document.getElementById("navbar-movil");
  const navbarMovilLinks = document.querySelectorAll("#navbar-movil a");
  const navBar = document.getElementById("navbar");
  const btnMovil = document.getElementById("btn-contacto-movil");

  /*   let lastScrollTop = 1;

  window.addEventListener("scroll", () => {
    const scrollTop = window.scrollY || document.documentElement.scrollTop;

    if (scrollTop > lastScrollTop) {
      navBar.classList.add("-translate-y-24");
    } else if (scrollTop === 0) {
      navBar.classList.remove("-translate-y-24");
      navBar.classList.remove("bg-[#1d1d1b]");
      navBar.classList.remove("lg:bg-[#1d1d1b]");
      navBar.classList.add("bg-transparent");
    } else {
      navBar.classList.remove("-translate-y-24");
      navBar.classList.add("bg-[#1d1d1b]");
      navBar.classList.add("lg:bg-[#1d1d1b]");
    }

    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
  }); */

  menuInput.addEventListener("click", () => {
    menuInput.checked
      ? (navbarMovil.classList.toggle("-translate-y-full"),
        navbarMovil.classList.toggle("translate-y-0"),
        setTimeout(() => {
          navbarMovil.classList.toggle("bg-opacity-0");
          navbarMovil.classList.toggle("bg-opacity-25");
          navbarMovil.firstElementChild.classList.toggle("opacity-0");
          navbarMovil.firstElementChild.classList.toggle("opacity-100");
        }, 200))
      : (navbarMovil.classList.toggle("bg-opacity-0"),
        navbarMovil.classList.toggle("bg-opacity-25"),
        navbarMovil.firstElementChild.classList.toggle("opacity-0"),
        navbarMovil.firstElementChild.classList.toggle("opacity-100"),
        setTimeout(() => {
          navbarMovil.classList.toggle("-translate-y-full"),
            navbarMovil.classList.toggle("translate-y-0");
        }, 500));
  });

  navbarMovilLinks.forEach((link) => {
    link.addEventListener("click", () => {
      navbarMovil.classList.toggle("bg-opacity-0");
      navbarMovil.classList.toggle("bg-opacity-25");
      navbarMovil.firstElementChild.classList.toggle("opacity-0");
      navbarMovil.firstElementChild.classList.toggle("opacity-100");
      menuInput.checked = false;
      setTimeout(() => {
        navbarMovil.classList.toggle("-translate-y-full");
        navbarMovil.classList.toggle("translate-y-0");
      }, 500);
    });
  });

  btnMovil.addEventListener("click", () => {
    navbarMovil.classList.toggle("bg-opacity-0");
    navbarMovil.classList.toggle("bg-opacity-25");
    navbarMovil.firstElementChild.classList.toggle("opacity-0");
    navbarMovil.firstElementChild.classList.toggle("opacity-100");
    menuInput.checked = false;
    setTimeout(() => {
      navbarMovil.classList.toggle("-translate-y-full");
      navbarMovil.classList.toggle("translate-y-0");
    }, 500);
  });
</script>

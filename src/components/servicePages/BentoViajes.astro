---
import ButtonBentoCard from "./ButtonBentoCard.astro";

const path = Astro.url.pathname;
const basePath = path.split("/")[1];
const result = `/${basePath}`;

type Props = {
  title1: string;
  title2: string;
  title3: string;

  datacontent1: string;
  datacontent2: string;
  datacontent3: string;

  dataform1: string;
  dataform2: string;
  dataform3: string;
};
const {
  title1,
  title2,
  title3,

  datacontent1,
  datacontent2,
  datacontent3,

  dataform1,
  dataform2,
  dataform3,
} = Astro.props;
---

<div
  class="flex flex-col lg:grid grid__container w-full xl:w-[70%] my-10"
  data-aos="fade-up"
  data-aos-duration="800"
  data-aos-once="true"
>
  <div class="card1 card">
    <div class="w-full h-full flex ml-4 title">
      <p class="texto">{title1}</p>
    </div>

    <div
      class="absolute w-full h-full bg-[url('/img/vacaciones.avif')] opacity-80 bg-cover bg-[right_50%_bottom] md:bg-[center_bottom] bg-no-repeat"
    >
    </div>
    <a
      href={dataform1}
      class="ver__mas"
      title={datacontent1}
    >
      <p class="contenido__card">
        {datacontent1}
      </p>
      <ButtonBentoCard text="Cotizá" />
    </a>
  </div>

  <div class="card2 card">
    <div class="w-full h-full flex ml-4 title">
      <p class="texto">{title2}</p>
    </div>

    <div
      class=`absolute w-full h-full bg-[url('/img/enviaje.avif')] opacity-80 bg-cover bg-[right_50%_bottom] md:bg-[center_bottom_-100px] lg:bg-[right_50%_bottom] bg-no-repeat`
    >
    </div>
    <a
      href={dataform2}
      class="ver__mas"
      title={datacontent2}
    >
      <p class="contenido__card">
        {datacontent2}
      </p>
      <ButtonBentoCard text="Cotizá" />
    </a>
  </div>

  <div class="card3 card">
    <div class="w-full h-full flex ml-4 title">
      <p class="texto">{title3}</p>
    </div>

    <div
      class=`absolute w-full h-full bg-[url('/img/w&t2.avif')] opacity-80  bg-cover bg-[right_15%_bottom] md:bg-[right_bottom] bg-no-repeat`
    >
    </div>

    <a
      href={dataform3}
      class="ver__mas"
      title={datacontent3}
    >
      <p class="contenido__card">
        {datacontent3}
      </p>
      <ButtonBentoCard text="Cotizá" />
    </a>
  </div>
</div>

<style>
  .grid__container {
    position: relative;
    z-index: 20;

    grid:
      "card1 card1 card1 card1 card1 card1 card2 card2 card2 card2 card2 card2" 1fr
      "card3 card3 card3 card3 card3 card3 card3 card3 card3 card3 card3 card3" 1fr
      /*  "card5 card5 card5 card5 card6 card6 card6 card6 card7 card7 card7 card7" 1fr
      "card8 card8 card8 card8 card8 card8 card8 card9 card9 card9 card9 card9" 1fr */
      / 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 18px;
  }

  .grid__container:has(.card:hover) .card:not(:hover) {
    filter: grayscale(70%);
    opacity: 25%;
  }

  .card {
    z-index: 20;
    overflow: hidden;
    display: flex;
    position: relative;
    width: 100%;
    min-height: 400px;
    max-height: 550px;

    border-radius: 20px;

    transition: all 0.3s linear;
    cursor: pointer;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #6fa29d 52%,
      #96b6b3 100%
    );

    &:hover .ver__mas {
      left: 0;
    }

    &:hover .title {
      opacity: 0;
    }

    .texto {
      color: #f9fafb;
      font-size: 30px;
      margin-top: 8px;
      font-weight: 300;
      z-index: 30;
      filter: drop-shadow(5px 5px 6px #000000);
    }
  }

  .title {
    opacity: 1;
    transition: all 0.3s linear;
  }

  .ver__mas {
    position: absolute;
    bottom: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    padding: 2rem;
    background-color: #000000ec;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    transition: all 0.3s linear 0.1s;
  }

  .contenido__card {
    color: #f9fafb;
    text-align: left;
    text-wrap: pretty;
    font-size: clamp(12px, 3vw, 16px);
    font-weight: 300;
  }
  .card1 {
    grid-area: card1;
  }
  .card2 {
    grid-area: card2;
  }
  .card3 {
    grid-area: card3;
  }
  /* .card4 {
    grid-area: card4;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #18403e 39%,
      #349792 100%
    );
  }
  .card5 {
    grid-area: card5;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #1d1e1c 39%,
      #686868 100%
    );
  }
  .card6 {
    grid-area: card6;

    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #6fa29d 52%,
      #96b6b3 100%
    );
  }
  .card7 {
    grid-area: card7;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #ed6f5f 39%,
      #f6ada3 100%
    );
  }
  .card8 {
    grid-area: card8;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #eb8284 39%,
      #e8abac 100%
    );
  }
  .card9 {
    grid-area: card9;
    background-image: linear-gradient(
      135deg,
      #000000 0%,
      #18403e 39%,
      #349792 100%
    );
  } */

  dialog {
    scale: 0;
    opacity: 0;
    transition:
      scale 0.3s linear,
      display 0.4s linear allow-discrete,
      opacity 0.4s linear;
  }

  dialog[open] {
    opacity: 1;
    scale: 1;

    transition:
      scale 0.3s linear,
      opacity 0.4s linear;

    @starting-style {
      scale: 0;
      opacity: 0;
    }
  }

  dialog::backdrop {
    backdrop-filter: blur(4px);
    background: rgba(0, 0, 0, 0.26);
  }

  .div {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-radius: 20px;
    height: clamp(50px, 10vw, 70px);
    width: clamp(150px, 50vw, 300px);
    background-image: linear-gradient(
      135deg,
      #3e5351 30%,
      rgb(66, 182, 170) 100%
    );
    transition: all 0.2s linear;
    cursor: pointer;
    &:hover {
      transform: scale(1.05);
    }
  }

  .sub__container {
    position: relative;
  }
  .sub {
    position: absolute;
    top: clamp(30px, 3.5vw, 50px);
    bottom: 0;
    right: 0;
    left: 0%;
    width: 100%;
    height: 40px;
  }
</style>

<!-- <script>
  document.addEventListener("astro:page-load", () => {
    const btnDialog = document.querySelectorAll("div");
    const btnModalContact = document.querySelectorAll("#open-modal-contacto");
    const dialog = document.getElementById("modal-info") as HTMLDialogElement;
    const close = document.getElementById("close");
    const closeContact = document.querySelectorAll("#close-contact");

    const modalContent = document.getElementById("modal-info-content");
    const modalImg = document.getElementById(
      "modal-info-img"
    ) as HTMLImageElement;

    btnDialog.forEach((btn) => {
      btn.addEventListener("click", () => {
        const bgColor = btn.getAttribute("data-color");
        const data = btn.getAttribute("data-content");

        const img = btn.getAttribute("data-img-background");

        const position = btn.getAttribute("data-img-position");
        const form = btn.getAttribute("data-form");
        dialog.style.backgroundImage = bgColor;
        modalContent.innerHTML = data;
        modalImg.src = img;
        modalImg.style.objectPosition = position;
        dialog.setAttribute("data-form", form);

        btnModalContact.forEach((btn) => {
          btn.setAttribute("href", form);
        });
        dialog.showModal();
      });
    });

    btnModalContact.forEach((btn) => {
      btn.addEventListener("click", () => {
        dialog.close();
        const activeElement = document.activeElement;
        if (activeElement instanceof HTMLElement) {
          activeElement.blur();
        }
      });
    });

    close.addEventListener("click", () => {
      dialog.close();
      const activeElement = document.activeElement;
      if (activeElement instanceof HTMLElement) {
        activeElement.blur();
      }
    });
  });
</script> -->
